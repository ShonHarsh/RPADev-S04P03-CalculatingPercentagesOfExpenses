<Activity mc:Ignorable="sap sap2010" x:Class="Main" sap2010:ExpressionActivityEditor.ExpressionActivityEditor="C#" sap:VirtualizedContainerService.HintSize="1101,7033" sap2010:WorkflowViewState.IdRef="ActivityBuilder_1" xmlns="http://schemas.microsoft.com/netfx/2009/xaml/activities" xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" xmlns:sap="http://schemas.microsoft.com/netfx/2009/xaml/activities/presentation" xmlns:sap2010="http://schemas.microsoft.com/netfx/2010/xaml/activities/presentation" xmlns:scg="clr-namespace:System.Collections.Generic;assembly=System.Private.CoreLib" xmlns:sco="clr-namespace:System.Collections.ObjectModel;assembly=System.Private.CoreLib" xmlns:sd="clr-namespace:System.Data;assembly=System.Data.Common" xmlns:ui="http://schemas.uipath.com/workflow/activities" xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml">
  <TextExpression.NamespacesForImplementation>
    <sco:Collection x:TypeArguments="x:String">
      <x:String>System.Activities</x:String>
      <x:String>System.Activities.Statements</x:String>
      <x:String>System</x:String>
      <x:String>System.Collections</x:String>
      <x:String>System.Collections.Generic</x:String>
      <x:String>System.Collections.ObjectModel</x:String>
      <x:String>System.Data</x:String>
      <x:String>UiPath.Core.Activities</x:String>
      <x:String>System.Runtime.Serialization</x:String>
      <x:String>System.Reflection</x:String>
      <x:String>System.ComponentModel</x:String>
      <x:String>System.Xml.Serialization</x:String>
      <x:String>UiPath.Excel</x:String>
      <x:String>UiPath.Excel.Activities</x:String>
      <x:String>UiPath.DataTableUtilities</x:String>
    </sco:Collection>
  </TextExpression.NamespacesForImplementation>
  <TextExpression.ReferencesForImplementation>
    <sco:Collection x:TypeArguments="AssemblyReference">
      <AssemblyReference>Microsoft.CSharp</AssemblyReference>
      <AssemblyReference>Microsoft.VisualBasic</AssemblyReference>
      <AssemblyReference>mscorlib</AssemblyReference>
      <AssemblyReference>NPOI</AssemblyReference>
      <AssemblyReference>PresentationCore</AssemblyReference>
      <AssemblyReference>PresentationFramework</AssemblyReference>
      <AssemblyReference>System</AssemblyReference>
      <AssemblyReference>System.Activities</AssemblyReference>
      <AssemblyReference>System.Collections</AssemblyReference>
      <AssemblyReference>System.Collections.NonGeneric</AssemblyReference>
      <AssemblyReference>System.ComponentModel</AssemblyReference>
      <AssemblyReference>System.ComponentModel.EventBasedAsync</AssemblyReference>
      <AssemblyReference>System.ComponentModel.Primitives</AssemblyReference>
      <AssemblyReference>System.ComponentModel.TypeConverter</AssemblyReference>
      <AssemblyReference>System.Configuration.ConfigurationManager</AssemblyReference>
      <AssemblyReference>System.Console</AssemblyReference>
      <AssemblyReference>System.Core</AssemblyReference>
      <AssemblyReference>System.Data</AssemblyReference>
      <AssemblyReference>System.Data.Common</AssemblyReference>
      <AssemblyReference>System.Data.DataSetExtensions</AssemblyReference>
      <AssemblyReference>System.Data.SqlClient</AssemblyReference>
      <AssemblyReference>System.Drawing</AssemblyReference>
      <AssemblyReference>System.Drawing.Common</AssemblyReference>
      <AssemblyReference>System.Drawing.Primitives</AssemblyReference>
      <AssemblyReference>System.Linq</AssemblyReference>
      <AssemblyReference>System.Linq.Expressions</AssemblyReference>
      <AssemblyReference>System.Memory</AssemblyReference>
      <AssemblyReference>System.Memory.Data</AssemblyReference>
      <AssemblyReference>System.Net.Mail</AssemblyReference>
      <AssemblyReference>System.ObjectModel</AssemblyReference>
      <AssemblyReference>System.Private.CoreLib</AssemblyReference>
      <AssemblyReference>System.Private.DataContractSerialization</AssemblyReference>
      <AssemblyReference>System.Private.ServiceModel</AssemblyReference>
      <AssemblyReference>System.Private.Uri</AssemblyReference>
      <AssemblyReference>System.Private.Xml</AssemblyReference>
      <AssemblyReference>System.Reflection.DispatchProxy</AssemblyReference>
      <AssemblyReference>System.Reflection.Metadata</AssemblyReference>
      <AssemblyReference>System.Reflection.TypeExtensions</AssemblyReference>
      <AssemblyReference>System.Runtime.Numerics</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Formatters</AssemblyReference>
      <AssemblyReference>System.Runtime.Serialization.Primitives</AssemblyReference>
      <AssemblyReference>System.Security.Permissions</AssemblyReference>
      <AssemblyReference>System.ServiceModel</AssemblyReference>
      <AssemblyReference>System.ServiceModel.Activities</AssemblyReference>
      <AssemblyReference>System.Xaml</AssemblyReference>
      <AssemblyReference>System.Xml</AssemblyReference>
      <AssemblyReference>System.Xml.Linq</AssemblyReference>
      <AssemblyReference>UiPath.Excel</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Excel.Activities.Design</AssemblyReference>
      <AssemblyReference>UiPath.Studio.Constants</AssemblyReference>
      <AssemblyReference>UiPath.System.Activities</AssemblyReference>
      <AssemblyReference>UiPath.UiAutomation.Activities</AssemblyReference>
      <AssemblyReference>UiPath.Workflow</AssemblyReference>
      <AssemblyReference>WindowsBase</AssemblyReference>
    </sco:Collection>
  </TextExpression.ReferencesForImplementation>
  <sap:WorkflowViewStateService.ViewState>
    <scg:Dictionary x:TypeArguments="x:String, x:Object">
      <x:Boolean x:Key="ShouldExpandAll">True</x:Boolean>
    </scg:Dictionary>
  </sap:WorkflowViewStateService.ViewState>
  <Sequence DisplayName="Main Sequence" sap:VirtualizedContainerService.HintSize="654,6968" sap2010:WorkflowViewState.IdRef="Sequence_1">
    <Sequence.Variables>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_PaymentsCard">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_6">new DataTable()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="sd:DataTable" Name="dt_PaymentsCash">
        <Variable.Default>
          <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_7">new DataTable()</CSharpValue>
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="columnNameValue">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="columnNameDate">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="columnNameExpense">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="columnNamePercent">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="filePathOutput">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
      <Variable x:TypeArguments="x:String" Name="worksheetNameOutput">
        <Variable.Default>
          <Literal x:TypeArguments="x:String" Value="" />
        </Variable.Default>
      </Variable>
    </Sequence.Variables>
    <sap:WorkflowViewStateService.ViewState>
      <scg:Dictionary x:TypeArguments="x:String, x:Object">
        <x:Boolean x:Key="IsExpanded">True</x:Boolean>
      </scg:Dictionary>
    </sap:WorkflowViewStateService.ViewState>
    <ui:LogMessage DisplayName="Log Message RPADev-S04P03-CalculatingPercentagesOfExpenses.Main.Begin;" sap:VirtualizedContainerService.HintSize="592,173" sap2010:WorkflowViewState.IdRef="LogMessage_1">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_2">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_1">"RPADev-S04P03-CalculatingPercentagesOfExpenses.Main.Begin;"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
    <Sequence sap2010:Annotation.AnnotationText="Bring together cash and card expenses and calculate percentages on categories&#xA;&#xA;We have a list of expenses (rent, food, utilities, leisure, savings) for which card payments were made. We have discovered that some transactions are missing, as they were done in cash. Prepare a workflow to bring all the expenses in a single file and calculate the percentages for each expense made.&#xA;&#xA;Input files:&#xA;&#xA;CardPayments (.xlsx)&#xA;CashPayments (.xlsx)&#xA;&#xA;Headers: Expense, Date, Value&#xA;" DisplayName="Sequence Initialization" sap:VirtualizedContainerService.HintSize="592,4399" sap2010:WorkflowViewState.IdRef="Sequence_4">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="filePathCard">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:String" Name="filePathCash">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:String" Name="worksheetNameCard">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:String" Name="worksheetNameCash">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:String" Name="columnNameTransactionType">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
        <Variable x:TypeArguments="x:String" Name="dateValue">
          <Variable.Default>
            <Literal x:TypeArguments="x:String" Value="" />
          </Variable.Default>
        </Variable>
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
          <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:MultipleAssign DisplayName="Multiple Assign Initialization" sap:VirtualizedContainerService.HintSize="512,303" sap2010:WorkflowViewState.IdRef="MultipleAssign_1">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_1">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_1">filePathCard</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_73">@"Data\Input\RPADev-S04P03-CalculatingPercentagesOfExpenses-CardPayments.xlsx"</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_2">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_2">filePathCash</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_74">@"Data\Input\RPADev-S04P03-CalculatingPercentagesOfExpenses-CashPayments.xlsx"</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_15">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_38">filePathOutput</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">
                  <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_75">@"Data\Output\RPADev-S04P03-CalculatingPercentagesOfExpenses-Output.xlsx"</CSharpValue>
                </InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_3">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_3">worksheetNameCard</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_4">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_4">worksheetNameCash</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Sheet1</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_16">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_40">worksheetNameOutput</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Output</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <ui:MultipleAssign DisplayName="Multiple Assign Spreadsheet Data Points" sap:VirtualizedContainerService.HintSize="512,272" sap2010:WorkflowViewState.IdRef="MultipleAssign_3">
        <ui:MultipleAssign.AssignOperations>
          <scg:List x:TypeArguments="ui:AssignOperation" Capacity="8">
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_12">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_29">columnNameDate</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Date</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_11">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_30">columnNameExpense</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Expense</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_14">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_33">columnNamePercent</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Percent</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_10">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_25">columnNameTransactionType</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Transaction Type</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
            <ui:AssignOperation sap2010:WorkflowViewState.IdRef="AssignOperation_13">
              <ui:AssignOperation.To>
                <OutArgument x:TypeArguments="x:String">
                  <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_31">columnNameValue</CSharpReference>
                </OutArgument>
              </ui:AssignOperation.To>
              <ui:AssignOperation.Value>
                <InArgument x:TypeArguments="x:String">Value</InArgument>
              </ui:AssignOperation.Value>
            </ui:AssignOperation>
          </scg:List>
        </ui:MultipleAssign.AssignOperations>
      </ui:MultipleAssign>
      <Sequence DisplayName="Sequence Card Operations" sap:VirtualizedContainerService.HintSize="512,1533" sap2010:WorkflowViewState.IdRef="Sequence_6">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range Workbook Card" sap:VirtualizedContainerService.HintSize="450,120" sap2010:WorkflowViewState.IdRef="ReadRange_1">
          <ui:ReadRange.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_5">dt_PaymentsCard</CSharpReference>
            </OutArgument>
          </ui:ReadRange.DataTable>
          <ui:ReadRange.SheetName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_9">worksheetNameCard</CSharpValue>
            </InArgument>
          </ui:ReadRange.SheetName>
          <ui:ReadRange.WorkbookPath>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_8">filePathCard</CSharpValue>
            </InArgument>
          </ui:ReadRange.WorkbookPath>
        </ui:ReadRange>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" DisplayName="Add Data Column Transaction Type Card" sap:VirtualizedContainerService.HintSize="450,218" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_1">
          <ui:AddDataColumn.ColumnName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_17">columnNameTransactionType</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.ColumnName>
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_13">dt_PaymentsCard</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
        </ui:AddDataColumn>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table Update Transaction Type Card" sap:VirtualizedContainerService.HintSize="450,1075" sap2010:WorkflowViewState.IdRef="ForEachRow_2">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body Update Transaction Type Card" sap:VirtualizedContainerService.HintSize="416,888" sap2010:WorkflowViewState.IdRef="Sequence_8">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" DisplayName="Get Row Item Date Card" sap:VirtualizedContainerService.HintSize="354,219" sap2010:WorkflowViewState.IdRef="GetRowItem_1">
                  <ui:GetRowItem.ColumnName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_55">columnNameDate</CSharpValue>
                    </InArgument>
                  </ui:GetRowItem.ColumnName>
                  <ui:GetRowItem.Row>
                    <InArgument x:TypeArguments="sd:DataRow">
                      <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_29">CurrentRow</CSharpValue>
                    </InArgument>
                  </ui:GetRowItem.Row>
                  <ui:GetRowItem.Value>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_19">dateValue</CSharpReference>
                    </OutArgument>
                  </ui:GetRowItem.Value>
                </ui:GetRowItem>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Methods\\Date\\Date_DD.MM.YYYYToISO.xaml - Invoke Workflow File Card" sap:VirtualizedContainerService.HintSize="354,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_1" UnSafe="False" WorkflowFileName="Methods\\Date\\Date_DD.MM.YYYYToISO.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Date">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_48">dateValue</CSharpValue>
                    </InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_DateISO">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_18">dateValue</CSharpReference>
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:UpdateRowItem ColumnIndex="{x:Null}" DisplayName="Update Row Item Date Card" sap:VirtualizedContainerService.HintSize="354,224" sap2010:WorkflowViewState.IdRef="UpdateRowItem_4">
                  <ui:UpdateRowItem.ColumnName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_56">columnNameDate</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.ColumnName>
                  <ui:UpdateRowItem.Row>
                    <InArgument x:TypeArguments="sd:DataRow">
                      <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_47">CurrentRow</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Row>
                  <ui:UpdateRowItem.Value>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_46">dateValue</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Value>
                </ui:UpdateRowItem>
                <ui:UpdateRowItem ColumnIndex="{x:Null}" DisplayName="Update Row Item Transaction Type Card" sap:VirtualizedContainerService.HintSize="354,215" sap2010:WorkflowViewState.IdRef="UpdateRowItem_1">
                  <ui:UpdateRowItem.ColumnName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_20">columnNameTransactionType</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.ColumnName>
                  <ui:UpdateRowItem.Row>
                    <InArgument x:TypeArguments="sd:DataRow">
                      <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_19">CurrentRow</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Row>
                  <ui:UpdateRowItem.Value>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_18">"CARD"</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Value>
                </ui:UpdateRowItem>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <ui:ForEachRow.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_15">dt_PaymentsCard</CSharpValue>
            </InArgument>
          </ui:ForEachRow.DataTable>
        </ui:ForEachRow>
      </Sequence>
      <Sequence DisplayName="Sequence Cash Operations" sap:VirtualizedContainerService.HintSize="512,1533" sap2010:WorkflowViewState.IdRef="Sequence_7">
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsExpanded">True</x:Boolean>
            <x:Boolean x:Key="IsPinned">False</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
        <ui:ReadRange Range="{x:Null}" AddHeaders="True" DisplayName="Read Range Workbook Cash" sap:VirtualizedContainerService.HintSize="450,120" sap2010:WorkflowViewState.IdRef="ReadRange_2">
          <ui:ReadRange.DataTable>
            <OutArgument x:TypeArguments="sd:DataTable">
              <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_6">dt_PaymentsCash</CSharpReference>
            </OutArgument>
          </ui:ReadRange.DataTable>
          <ui:ReadRange.SheetName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_11">worksheetNameCash</CSharpValue>
            </InArgument>
          </ui:ReadRange.SheetName>
          <ui:ReadRange.WorkbookPath>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_10">filePathCash</CSharpValue>
            </InArgument>
          </ui:ReadRange.WorkbookPath>
        </ui:ReadRange>
        <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" DisplayName="Add Data Column Transaction Type Cash" sap:VirtualizedContainerService.HintSize="450,218" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_2">
          <ui:AddDataColumn.ColumnName>
            <InArgument x:TypeArguments="x:String">
              <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_57">columnNameTransactionType</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.ColumnName>
          <ui:AddDataColumn.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_14">dt_PaymentsCash</CSharpValue>
            </InArgument>
          </ui:AddDataColumn.DataTable>
        </ui:AddDataColumn>
        <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table Update Transaction Type Cash" sap:VirtualizedContainerService.HintSize="450,1075" sap2010:WorkflowViewState.IdRef="ForEachRow_3">
          <ui:ForEachRow.Body>
            <ActivityAction x:TypeArguments="sd:DataRow">
              <ActivityAction.Argument>
                <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
              </ActivityAction.Argument>
              <Sequence DisplayName="Body Update Transaction Type Cash" sap:VirtualizedContainerService.HintSize="416,888" sap2010:WorkflowViewState.IdRef="Sequence_9">
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
                <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" DisplayName="Get Row Item Date" sap:VirtualizedContainerService.HintSize="354,219" sap2010:WorkflowViewState.IdRef="GetRowItem_3">
                  <ui:GetRowItem.ColumnName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_58">columnNameDate</CSharpValue>
                    </InArgument>
                  </ui:GetRowItem.ColumnName>
                  <ui:GetRowItem.Row>
                    <InArgument x:TypeArguments="sd:DataRow">
                      <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_49">CurrentRow</CSharpValue>
                    </InArgument>
                  </ui:GetRowItem.Row>
                  <ui:GetRowItem.Value>
                    <OutArgument x:TypeArguments="x:String">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_20">dateValue</CSharpReference>
                    </OutArgument>
                  </ui:GetRowItem.Value>
                </ui:GetRowItem>
                <ui:InvokeWorkflowFile ArgumentsVariable="{x:Null}" ContinueOnError="{x:Null}" DisplayName="Methods\\Date\\Date_DD.MM.YYYYToISO.xaml - Invoke Workflow File Cash" sap:VirtualizedContainerService.HintSize="354,145" sap2010:WorkflowViewState.IdRef="InvokeWorkflowFile_2" UnSafe="False" WorkflowFileName="Methods\\Date\\Date_DD.MM.YYYYToISO.xaml">
                  <ui:InvokeWorkflowFile.Arguments>
                    <InArgument x:TypeArguments="x:String" x:Key="in_Date">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_50">dateValue</CSharpValue>
                    </InArgument>
                    <OutArgument x:TypeArguments="x:String" x:Key="out_DateISO">
                      <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_21">dateValue</CSharpReference>
                    </OutArgument>
                  </ui:InvokeWorkflowFile.Arguments>
                </ui:InvokeWorkflowFile>
                <ui:UpdateRowItem ColumnIndex="{x:Null}" DisplayName="Update Row Item Date Cash" sap:VirtualizedContainerService.HintSize="354,224" sap2010:WorkflowViewState.IdRef="UpdateRowItem_5">
                  <ui:UpdateRowItem.ColumnName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_59">columnNameDate</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.ColumnName>
                  <ui:UpdateRowItem.Row>
                    <InArgument x:TypeArguments="sd:DataRow">
                      <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_52">CurrentRow</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Row>
                  <ui:UpdateRowItem.Value>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_51">dateValue</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Value>
                </ui:UpdateRowItem>
                <ui:UpdateRowItem ColumnIndex="{x:Null}" DisplayName="Update Row Item Transaction Type Cash" sap:VirtualizedContainerService.HintSize="354,215" sap2010:WorkflowViewState.IdRef="UpdateRowItem_2">
                  <ui:UpdateRowItem.ColumnName>
                    <InArgument x:TypeArguments="x:String">
                      <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_23">columnNameTransactionType</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.ColumnName>
                  <ui:UpdateRowItem.Row>
                    <InArgument x:TypeArguments="sd:DataRow">
                      <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_22">CurrentRow</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Row>
                  <ui:UpdateRowItem.Value>
                    <InArgument x:TypeArguments="x:Object">
                      <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_21">"CASH"</CSharpValue>
                    </InArgument>
                  </ui:UpdateRowItem.Value>
                </ui:UpdateRowItem>
              </Sequence>
            </ActivityAction>
          </ui:ForEachRow.Body>
          <ui:ForEachRow.DataTable>
            <InArgument x:TypeArguments="sd:DataTable">
              <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_16">dt_PaymentsCash</CSharpValue>
            </InArgument>
          </ui:ForEachRow.DataTable>
        </ui:ForEachRow>
      </Sequence>
      <ui:MergeDataTable sap2010:Annotation.AnnotationText="The Card table is the one being used for all the operations henceforth." DisplayName="Merge Data Table Cash Into Card" sap:VirtualizedContainerService.HintSize="512,207" sap2010:WorkflowViewState.IdRef="MergeDataTable_1" MissingSchemaAction="Add">
        <ui:MergeDataTable.Destination>
          <InOutArgument x:TypeArguments="sd:DataTable">
            <CSharpReference x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpReference`1_8">dt_PaymentsCard</CSharpReference>
          </InOutArgument>
        </ui:MergeDataTable.Destination>
        <ui:MergeDataTable.Source>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_24">dt_PaymentsCash</CSharpValue>
          </InArgument>
        </ui:MergeDataTable.Source>
        <sap:WorkflowViewStateService.ViewState>
          <scg:Dictionary x:TypeArguments="x:String, x:Object">
            <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
          </scg:Dictionary>
        </sap:WorkflowViewStateService.ViewState>
      </ui:MergeDataTable>
      <ui:AddDataColumn x:TypeArguments="x:Object" AllowDBNull="{x:Null}" AutoIncrement="{x:Null}" Column="{x:Null}" DefaultValue="{x:Null}" MaxLength="{x:Null}" Unique="{x:Null}" DisplayName="Add Data Column Percent" sap:VirtualizedContainerService.HintSize="512,209" sap2010:WorkflowViewState.IdRef="AddDataColumn`1_4">
        <ui:AddDataColumn.ColumnName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_65">columnNamePercent</CSharpValue>
          </InArgument>
        </ui:AddDataColumn.ColumnName>
        <ui:AddDataColumn.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_64">dt_PaymentsCard</CSharpValue>
          </InArgument>
        </ui:AddDataColumn.DataTable>
      </ui:AddDataColumn>
    </Sequence>
    <Sequence DisplayName="Sequence Operation" sap:VirtualizedContainerService.HintSize="592,1488" sap2010:WorkflowViewState.IdRef="Sequence_2">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:Double" Default="0" Name="subValue" />
        <Variable x:TypeArguments="x:Double" Default="0" Name="grandTotal" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table Get Total" sap:VirtualizedContainerService.HintSize="530,605" sap2010:WorkflowViewState.IdRef="ForEachRow_4">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body Get Total" sap:VirtualizedContainerService.HintSize="496,409" sap2010:WorkflowViewState.IdRef="Sequence_5">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" DisplayName="Get Row Item Value" sap:VirtualizedContainerService.HintSize="434,219" sap2010:WorkflowViewState.IdRef="GetRowItem_4">
                <ui:GetRowItem.ColumnName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_60">columnNameValue</CSharpValue>
                  </InArgument>
                </ui:GetRowItem.ColumnName>
                <ui:GetRowItem.Row>
                  <InArgument x:TypeArguments="sd:DataRow">
                    <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_53">CurrentRow</CSharpValue>
                  </InArgument>
                </ui:GetRowItem.Row>
                <ui:GetRowItem.Value>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_34">subValue</CSharpReference>
                  </OutArgument>
                </ui:GetRowItem.Value>
              </ui:GetRowItem>
              <Assign DisplayName="Assign Grand Total" sap:VirtualizedContainerService.HintSize="434,105" sap2010:WorkflowViewState.IdRef="Assign_2">
                <Assign.To>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_35">grandTotal</CSharpReference>
                  </OutArgument>
                </Assign.To>
                <Assign.Value>
                  <InArgument x:TypeArguments="x:Double">
                    <CSharpValue x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpValue`1_54">grandTotal + subValue</CSharpValue>
                  </InArgument>
                </Assign.Value>
              </Assign>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <ui:ForEachRow.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_12">dt_PaymentsCard</CSharpValue>
          </InArgument>
        </ui:ForEachRow.DataTable>
      </ui:ForEachRow>
      <ui:ForEachRow ColumnNames="{x:Null}" CurrentIndex="{x:Null}" DisplayName="For Each Row in Data Table Report Data" sap:VirtualizedContainerService.HintSize="530,763" sap2010:WorkflowViewState.IdRef="ForEachRow_5">
        <ui:ForEachRow.Body>
          <ActivityAction x:TypeArguments="sd:DataRow">
            <ActivityAction.Argument>
              <DelegateInArgument x:TypeArguments="sd:DataRow" Name="CurrentRow" />
            </ActivityAction.Argument>
            <Sequence DisplayName="Body Report Data" sap:VirtualizedContainerService.HintSize="416,576" sap2010:WorkflowViewState.IdRef="Sequence_12">
              <sap:WorkflowViewStateService.ViewState>
                <scg:Dictionary x:TypeArguments="x:String, x:Object">
                  <x:Boolean x:Key="IsExpanded">True</x:Boolean>
                </scg:Dictionary>
              </sap:WorkflowViewStateService.ViewState>
              <ui:GetRowItem Column="{x:Null}" ColumnIndex="{x:Null}" DisplayName="Get Row Item Value Report" sap:VirtualizedContainerService.HintSize="354,219" sap2010:WorkflowViewState.IdRef="GetRowItem_5">
                <ui:GetRowItem.ColumnName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_81">columnNameValue</CSharpValue>
                  </InArgument>
                </ui:GetRowItem.ColumnName>
                <ui:GetRowItem.Row>
                  <InArgument x:TypeArguments="sd:DataRow">
                    <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_80">CurrentRow</CSharpValue>
                  </InArgument>
                </ui:GetRowItem.Row>
                <ui:GetRowItem.Value>
                  <OutArgument x:TypeArguments="x:Double">
                    <CSharpReference x:TypeArguments="x:Double" sap2010:WorkflowViewState.IdRef="CSharpReference`1_41">subValue</CSharpReference>
                  </OutArgument>
                </ui:GetRowItem.Value>
              </ui:GetRowItem>
              <ui:UpdateRowItem ColumnIndex="{x:Null}" sap2010:Annotation.AnnotationText="Math.Round Method&#xA;public static double Round (double value, int digits, MidpointRounding mode);" DisplayName="Update Row Item Percent" sap:VirtualizedContainerService.HintSize="354,272" sap2010:WorkflowViewState.IdRef="UpdateRowItem_6">
                <ui:UpdateRowItem.ColumnName>
                  <InArgument x:TypeArguments="x:String">
                    <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_68">columnNamePercent</CSharpValue>
                  </InArgument>
                </ui:UpdateRowItem.ColumnName>
                <ui:UpdateRowItem.Row>
                  <InArgument x:TypeArguments="sd:DataRow">
                    <CSharpValue x:TypeArguments="sd:DataRow" sap2010:WorkflowViewState.IdRef="CSharpValue`1_67">CurrentRow</CSharpValue>
                  </InArgument>
                </ui:UpdateRowItem.Row>
                <ui:UpdateRowItem.Value>
                  <InArgument x:TypeArguments="x:Object">
                    <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_66">Math.Round((subValue / grandTotal) * 100, 4, MidpointRounding.AwayFromZero)</CSharpValue>
                  </InArgument>
                </ui:UpdateRowItem.Value>
                <sap:WorkflowViewStateService.ViewState>
                  <scg:Dictionary x:TypeArguments="x:String, x:Object">
                    <x:Boolean x:Key="IsAnnotationDocked">True</x:Boolean>
                  </scg:Dictionary>
                </sap:WorkflowViewStateService.ViewState>
              </ui:UpdateRowItem>
            </Sequence>
          </ActivityAction>
        </ui:ForEachRow.Body>
        <ui:ForEachRow.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_63">dt_PaymentsCard</CSharpValue>
          </InArgument>
        </ui:ForEachRow.DataTable>
      </ui:ForEachRow>
    </Sequence>
    <Sequence DisplayName="Sequence Rersult" sap:VirtualizedContainerService.HintSize="592,656" sap2010:WorkflowViewState.IdRef="Sequence_3">
      <Sequence.Variables>
        <Variable x:TypeArguments="x:String" Name="strTableData" />
      </Sequence.Variables>
      <sap:WorkflowViewStateService.ViewState>
        <scg:Dictionary x:TypeArguments="x:String, x:Object">
          <x:Boolean x:Key="IsExpanded">True</x:Boolean>
        </scg:Dictionary>
      </sap:WorkflowViewStateService.ViewState>
      <ui:SortDataTable ColumnIndex="{x:Null}" DataColumn="{x:Null}" OutputDataTable="{x:Null}" DisplayName="Sort Data Table Date" sap:VirtualizedContainerService.HintSize="388,112" sap2010:WorkflowViewState.IdRef="SortDataTable_1" Order="Ascending" SortOrder="Ascending">
        <ui:SortDataTable.ColumnName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_82">columnNameDate</CSharpValue>
          </InArgument>
        </ui:SortDataTable.ColumnName>
        <ui:SortDataTable.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_79">dt_PaymentsCard</CSharpValue>
          </InArgument>
        </ui:SortDataTable.DataTable>
      </ui:SortDataTable>
      <ui:WriteRange StartingCell="{x:Null}" AddHeaders="True" DisplayName="Write Range Workbook Output File" sap:VirtualizedContainerService.HintSize="388,148" sap2010:WorkflowViewState.IdRef="WriteRange_1">
        <ui:WriteRange.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_77">dt_PaymentsCard</CSharpValue>
          </InArgument>
        </ui:WriteRange.DataTable>
        <ui:WriteRange.SheetName>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_78">worksheetNameOutput</CSharpValue>
          </InArgument>
        </ui:WriteRange.SheetName>
        <ui:WriteRange.WorkbookPath>
          <InArgument x:TypeArguments="x:String">
            <CSharpValue x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpValue`1_76">filePathOutput</CSharpValue>
          </InArgument>
        </ui:WriteRange.WorkbookPath>
      </ui:WriteRange>
      <ui:OutputDataTable DisplayName="Output Data Table To String" sap:VirtualizedContainerService.HintSize="388,112" sap2010:WorkflowViewState.IdRef="OutputDataTable_2">
        <ui:OutputDataTable.DataTable>
          <InArgument x:TypeArguments="sd:DataTable">
            <CSharpValue x:TypeArguments="sd:DataTable" sap2010:WorkflowViewState.IdRef="CSharpValue`1_70">dt_PaymentsCard</CSharpValue>
          </InArgument>
        </ui:OutputDataTable.DataTable>
        <ui:OutputDataTable.Text>
          <OutArgument x:TypeArguments="x:String">
            <CSharpReference x:TypeArguments="x:String" sap2010:WorkflowViewState.IdRef="CSharpReference`1_36">strTableData</CSharpReference>
          </OutArgument>
        </ui:OutputDataTable.Text>
      </ui:OutputDataTable>
      <ui:LogMessage DisplayName="Log Message RPADev-S04P03-CalculatingPercentagesOfExpenses.Main.Print;" sap:VirtualizedContainerService.HintSize="388,164" sap2010:WorkflowViewState.IdRef="LogMessage_5">
        <ui:LogMessage.Message>
          <InArgument x:TypeArguments="x:Object">
            <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_71">"RPADev-S04P03-CalculatingPercentagesOfExpenses.Main.Print;" + Environment.NewLine + string.Join(Environment.NewLine, strTableData)</CSharpValue>
          </InArgument>
        </ui:LogMessage.Message>
      </ui:LogMessage>
    </Sequence>
    <ui:LogMessage DisplayName="Log Message RPADev-S04P03-CalculatingPercentagesOfExpenses.Main.End;" sap:VirtualizedContainerService.HintSize="592,164" sap2010:WorkflowViewState.IdRef="LogMessage_2">
      <ui:LogMessage.Level>
        <InArgument x:TypeArguments="ui:LogLevel">
          <CSharpValue x:TypeArguments="ui:LogLevel" sap2010:WorkflowViewState.IdRef="CSharpValue`1_4">UiPath.Core.Activities.LogLevel.Info</CSharpValue>
        </InArgument>
      </ui:LogMessage.Level>
      <ui:LogMessage.Message>
        <InArgument x:TypeArguments="x:Object">
          <CSharpValue x:TypeArguments="x:Object" sap2010:WorkflowViewState.IdRef="CSharpValue`1_3">"RPADev-S04P03-CalculatingPercentagesOfExpenses.Main.End;"</CSharpValue>
        </InArgument>
      </ui:LogMessage.Message>
    </ui:LogMessage>
  </Sequence>
</Activity>